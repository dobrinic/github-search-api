services:
  app:
    container_name: ${PROJECT_NAME}-app
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    networks:
      - ${PROJECT_NAME}

  mysql:
    container_name: ${PROJECT_NAME}-mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    networks:
      - ${PROJECT_NAME}

  nginx:
    container_name: ${PROJECT_NAME}-nginx
    image: nginx:alpine
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}.rule=Host(`test.local`)"
      - "traefik.http.routers.${PROJECT_NAME}.entrypoints=web"
#      - "traefik.http.routers.${PROJECT_NAME}-secure.rule=Host(`test.adicio.hr`)"
#      - "traefik.http.routers.${PROJECT_NAME}-secure.entrypoints=web-secure"
#      - "traefik.http.routers.${PROJECT_NAME}-secure.tls=true"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
      - mysql
    networks:
      - proxy
      - ${PROJECT_NAME}

volumes:
  db-data:
    driver: local

networks:
  proxy:
    external: true
  git-search: